import numpy as np
import pandas as pd

# Assuming your DataFrame is named df
df['Source_File'] = df['Source_File'].str.strip()
df['Cards_LCY'] = df['Cards_LCY'].str.strip()
df['Definition_as_per_the_market'] = df['Definition_as_per_the_market'].str.strip()

# Define conditions
conditions = [
    (df['Cards_LCY'] == 'nan') & 
    (df['Definition_as_per_the_market'] == 'nan') & 
    (df['Source_File'] == 'MYH'),

    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '1.total accts'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '10.total accts where mob = 3'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '11.active accts where mob =6'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '12.total accts where mob = 6'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '13.payment amount in the current month'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '14.end of month balance in the previous month'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '15.credit limt assinged to the customer'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '16.accts in force with sum'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '17.accts in force if balance active or debit active'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '18.total balance in accts in force'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '19.total revolving balance'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '2.voluntary acct attrition'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '3.accts in force with eom balance <>0'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '4.eom balances of accts where interest amount > 0'),
    (df['Source_File'] == 'AOC') & (df['Cards_LCY'] == '5.total end of month balances'),
]

# Define choices
choices = [
    'Instalment Inflow (RBC, ABC)',
    'Total Accts in force â€“ A',
    '# Total Accts @ MOB3 - A',
    '# Active Accts @ MOB6 - A',
    '# Total Accts @ MOB6 - A',
    'Payment Amount - A',
    'Previous Month End balance - A',
    'Total Credit Limit - A',
    '# Debit Active Accts - A',
    '# Total Active Accts - A',
    'Total Revolving Balance - A',
    'Interest Free Revolving - A',
    '# Accts  attrited voluntarily - A',
    '# Balance Active Accts - A',
    'IBB balances - A',
    'Total Month End Balances - A'
]

# Apply conditions
df['Metric'] = np.select(conditions, choices, default=df['Cards_LCY'].str.strip())