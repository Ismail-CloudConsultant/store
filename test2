Got it ‚úÖ
Here‚Äôs a Streamlit code that uses your dataset, adds filters for Market and Segment, and builds all the KPIs/visuals you listed.

# forex_kpi_dashboard.py
import streamlit as st
import pandas as pd
import plotly.express as px

# ---------------- Load Data ----------------
@st.cache_data
def load_data():
    # You can replace this with reading a CSV file if needed
    data = {
        "Date": ["2024-10-01", "2025-01-01", "2024-10-01"],
        "Market": ["UAE", "India", "UAE"],
        "Currency Pair": ["NZD-AUD", "NZD-GBP", "GBP-CAD"],
        "Segment": ["Personal Banking", "Premier", "Personal Banking"],
        "Channel": ["Mobile", "Branch", "Digital"],
        "Transaction Bracket": ["0 - 14K", "14K - 28K", "0 - 14K"],
        "Margin Rate": ["0.7%", "1.8%", "0.85%"],
        "No. of Transactions": [187, 301, 286],
        "Transaction Amount (USD)": [3803.96, 15981.18, 9535.27],
        "Avg. Transaction Value (USD)": [20.34, 53.09, 33.34],
        "Min Transaction Value (USD)": [11.27, 207.69, 18.27],
        "Max Transaction Value (USD)": [194.49, 1369.61, 6025.42],
        "Total Spread Earned (USD)": [26.63, 287.66, 81.05],
        "Avg. Spread per Transaction (USD)": [0.14, 0.96, 0.28],
        "Conversion Rate (%)": [69.0, 82.1, 91.1],
        "Repeat Customer %": [44.0, 37.1, 67.8],
        "Customer Acquisition Cost (USD)": [17.62, 15.59, 31.80]
    }
    df = pd.DataFrame(data)
    df["Date"] = pd.to_datetime(df["Date"])
    df["Margin Rate"] = df["Margin Rate"].str.replace('%', '').astype(float) / 100
    return df

# ---------------- Streamlit UI ----------------
st.set_page_config(page_title="Forex KPI Dashboard", layout="wide")
st.title("üíπ Forex KPI Dashboard")

# Load data
df = load_data()

# Filters
col1, col2 = st.columns(2)
markets = st.multiselect("Select Market", options=df["Market"].unique(), default=df["Market"].unique())
segments = st.multiselect("Select Segment", options=df["Segment"].unique(), default=df["Segment"].unique())

df_filtered = df[(df["Market"].isin(markets)) & (df["Segment"].isin(segments))]

# ---------------- Charts ----------------
st.subheader("üìä KPI Visualizations")

# 1Ô∏è‚É£ Total Transaction Count by Currency Pair
fig1 = px.bar(df_filtered, x="Currency Pair", y="No. of Transactions", title="Total Transaction Count by Currency Pair")
st.plotly_chart(fig1, use_container_width=True)

# 2Ô∏è‚É£ Total Transaction Value (USD) by Currency Pair
fig2 = px.bar(df_filtered, x="Currency Pair", y="Transaction Amount (USD)", title="Total Transaction Value (USD) by Currency Pair")
st.plotly_chart(fig2, use_container_width=True)

# 3Ô∏è‚É£ Multi-line chart of Total Spread Earned (USD) by Currency Pair over Date
fig3 = px.line(df_filtered, x="Date", y="Total Spread Earned (USD)", color="Currency Pair", markers=True,
               title="Total Spread Earned (USD) by Currency Pair")
st.plotly_chart(fig3, use_container_width=True)

# 4Ô∏è‚É£ Avg. Spread per Transaction (USD) by Segment
fig4 = px.bar(df_filtered, x="Segment", y="Avg. Spread per Transaction (USD)", title="Avg. Spread per Transaction (USD) by Segment")
st.plotly_chart(fig4, use_container_width=True)

# 5Ô∏è‚É£ Pie chart of Transaction Value by Segment
fig5 = px.pie(df_filtered, names="Segment", values="Transaction Amount (USD)", title="Transaction Value by Segment")
st.plotly_chart(fig5, use_container_width=True)

# 6Ô∏è‚É£ Top Currency Pairs by Transaction Value
top_cp = df_filtered.groupby("Currency Pair")["Transaction Amount (USD)"].sum().reset_index()
top_cp = top_cp.sort_values(by="Transaction Amount (USD)", ascending=False)
fig6 = px.bar(top_cp, x="Currency Pair", y="Transaction Amount (USD)", title="Top Currency Pairs by Transaction Value")
st.plotly_chart(fig6, use_container_width=True)

# Show filtered data
st.subheader("üìÑ Filtered Data")
st.dataframe(df_filtered)

What this code does:

Loads your provided 3-row dataset into memory.

Adds filters for Market & Segment.

Generates:

Bar chart: Total Transaction Count by Currency Pair

Bar chart: Total Transaction Value by Currency Pair

Multi-line chart: Total Spread Earned by Currency Pair

Bar chart: Avg. Spread per Transaction by Segment

Pie chart: Transaction Value by Segment

Bar chart: Top Currency Pairs by Transaction Value


Displays the filtered dataset at the bottom.



---

If you want, I can extend this to also calculate summary KPIs (totals, averages, etc.) at the top of the dashboard so you get instant numbers alongside the charts. That would make it feel like a proper forex analytics tool.

